# Generated by Django 5.2.3 on 2025-06-30 20:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaArtigiano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome Categoria')),
                ('descrizione', models.TextField(blank=True, verbose_name='Descrizione')),
                ('icona', models.CharField(blank=True, help_text="Classe CSS per l'icona (es. fas fa-hammer)", max_length=50, verbose_name='Icona CSS')),
                ('colore', models.CharField(default='#007bff', help_text='Codice colore esadecimale', max_length=7, verbose_name='Colore')),
                ('attiva', models.BooleanField(default=True, verbose_name='Categoria Attiva')),
                ('ordine', models.IntegerField(default=0, verbose_name='Ordine')),
            ],
            options={
                'verbose_name': 'Categoria Artigiano',
                'verbose_name_plural': 'Categorie Artigiani',
                'ordering': ['ordine', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ProfiloArtigiano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_attivita', models.CharField(max_length=200, verbose_name='Nome Attività/Ditta')),
                ('partita_iva', models.CharField(blank=True, max_length=20, verbose_name='Partita IVA')),
                ('ha_partita_iva', models.BooleanField(default=False, verbose_name='Ha Partita IVA')),
                ('citta', models.CharField(max_length=100, verbose_name='Città')),
                ('cap', models.CharField(max_length=10, verbose_name='CAP')),
                ('indirizzo', models.CharField(blank=True, max_length=200, verbose_name='Indirizzo')),
                ('raggio_azione_km', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Raggio di Azione (km)')),
                ('descrizione', models.TextField(verbose_name='Descrizione Servizi')),
                ('descrizione_ai_generata', models.TextField(blank=True, verbose_name='Descrizione Generata da AI')),
                ('usa_descrizione_ai', models.BooleanField(default=False, verbose_name='Usa Descrizione AI')),
                ('fascia_prezzo', models.CharField(choices=[('economico', '€ - Economico'), ('medio', '€€ - Medio'), ('alto', '€€€ - Alto'), ('premium', '€€€€ - Premium')], default='medio', max_length=20, verbose_name='Fascia di Prezzo')),
                ('prezzo_orario_min', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Prezzo Orario Minimo (€)')),
                ('prezzo_orario_max', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Prezzo Orario Massimo (€)')),
                ('disponibilita', models.CharField(choices=[('mattina', 'Solo Mattina (8:00-12:00)'), ('pomeriggio', 'Solo Pomeriggio (14:00-18:00)'), ('sera', 'Anche Sera (fino alle 20:00)'), ('weekend', 'Anche Weekend'), ('flessibile', 'Orari Flessibili')], default='flessibile', max_length=20, verbose_name='Disponibilità Oraria')),
                ('italiano', models.BooleanField(default=True, verbose_name='Italiano')),
                ('inglese', models.BooleanField(default=False, verbose_name='Inglese')),
                ('francese', models.BooleanField(default=False, verbose_name='Francese')),
                ('arabo', models.BooleanField(default=False, verbose_name='Arabo')),
                ('altre_lingue', models.CharField(blank=True, max_length=200, verbose_name='Altre Lingue')),
                ('anni_esperienza', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)], verbose_name='Anni di Esperienza')),
                ('numero_lavori_completati', models.IntegerField(default=0, verbose_name='Lavori Completati')),
                ('foto_profilo', models.ImageField(blank=True, upload_to='artigiani/profili/', verbose_name='Foto Profilo')),
                ('foto_banner', models.ImageField(blank=True, upload_to='artigiani/banner/', verbose_name='Foto Banner')),
                ('telefono', models.CharField(max_length=20, verbose_name='Telefono')),
                ('whatsapp', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('email_lavoro', models.EmailField(blank=True, max_length=254, verbose_name='Email di Lavoro')),
                ('sito_web', models.URLField(blank=True, verbose_name='Sito Web')),
                ('verificato', models.BooleanField(default=False, verbose_name='Profilo Verificato')),
                ('attivo', models.BooleanField(default=True, verbose_name='Profilo Attivo')),
                ('premium', models.BooleanField(default=False, verbose_name='Account Premium')),
                ('data_registrazione', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Registrazione')),
                ('ultimo_accesso', models.DateTimeField(blank=True, null=True, verbose_name='Ultimo Accesso')),
                ('visualizzazioni_profilo', models.IntegerField(default=0, verbose_name='Visualizzazioni Profilo')),
                ('contatti_ricevuti', models.IntegerField(default=0, verbose_name='Contatti Ricevuti')),
                ('categoria_principale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artigiani.categoriaartigiano', verbose_name='Categoria Principale')),
                ('categorie_secondarie', models.ManyToManyField(blank=True, related_name='artigiani_secondari', to='artigiani.categoriaartigiano', verbose_name='Altre Competenze')),
                ('utente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utente')),
            ],
            options={
                'verbose_name': 'Profilo Artigiano',
                'verbose_name_plural': 'Profili Artigiani',
                'ordering': ['-premium', '-verificato', '-numero_lavori_completati', 'nome_attivita'],
            },
        ),
        migrations.CreateModel(
            name='FotoLavoro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immagine', models.ImageField(upload_to='artigiani/lavori/', verbose_name='Immagine')),
                ('titolo', models.CharField(max_length=200, verbose_name='Titolo')),
                ('descrizione', models.TextField(blank=True, verbose_name='Descrizione')),
                ('data_lavoro', models.DateField(blank=True, null=True, verbose_name='Data Lavoro')),
                ('in_evidenza', models.BooleanField(default=False, verbose_name='In Evidenza')),
                ('ordine', models.IntegerField(default=0, verbose_name='Ordine')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='artigiani.categoriaartigiano', verbose_name='Categoria Lavoro')),
                ('artigiano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foto_lavori', to='artigiani.profiloartigiano', verbose_name='Artigiano')),
            ],
            options={
                'verbose_name': 'Foto Lavoro',
                'verbose_name_plural': 'Foto Lavori',
                'ordering': ['-in_evidenza', 'ordine', '-data_lavoro'],
            },
        ),
        migrations.CreateModel(
            name='RichiestaPreventivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente_nome', models.CharField(max_length=100, verbose_name='Nome Cliente')),
                ('cliente_email', models.EmailField(max_length=254, verbose_name='Email Cliente')),
                ('cliente_telefono', models.CharField(max_length=20, verbose_name='Telefono Cliente')),
                ('titolo', models.CharField(max_length=200, verbose_name='Titolo Lavoro')),
                ('descrizione', models.TextField(verbose_name='Descrizione Dettagliata')),
                ('citta', models.CharField(max_length=100, verbose_name='Città')),
                ('cap', models.CharField(max_length=10, verbose_name='CAP')),
                ('indirizzo', models.CharField(blank=True, max_length=200, verbose_name='Indirizzo')),
                ('superficie_mq', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Superficie (mq)')),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Budget Minimo (€)')),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Budget Massimo (€)')),
                ('urgenza', models.CharField(choices=[('bassa', 'Non Urgente'), ('media', 'Medio'), ('alta', 'Urgente'), ('immediata', 'Immediata')], default='media', max_length=20, verbose_name='Urgenza')),
                ('data_inizio_preferita', models.DateField(blank=True, null=True, verbose_name='Data Inizio Preferita')),
                ('foto1', models.ImageField(blank=True, upload_to='richieste/', verbose_name='Foto 1')),
                ('foto2', models.ImageField(blank=True, upload_to='richieste/', verbose_name='Foto 2')),
                ('foto3', models.ImageField(blank=True, upload_to='richieste/', verbose_name='Foto 3')),
                ('analisi_ai', models.TextField(blank=True, verbose_name='Analisi AI della Foto')),
                ('stato', models.CharField(choices=[('nuova', 'Nuova'), ('vista', 'Vista'), ('risposta', 'Risposta Inviata'), ('accettata', 'Accettata'), ('rifiutata', 'Rifiutata'), ('completata', 'Completata')], default='nuova', max_length=20, verbose_name='Stato')),
                ('data_creazione', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Creazione')),
                ('data_ultima_modifica', models.DateTimeField(auto_now=True, verbose_name='Ultima Modifica')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artigiani.categoriaartigiano', verbose_name='Categoria Lavoro')),
                ('categoria_suggerita_ai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='richieste_suggerite', to='artigiani.categoriaartigiano', verbose_name='Categoria Suggerita da AI')),
            ],
            options={
                'verbose_name': 'Richiesta Preventivo',
                'verbose_name_plural': 'Richieste Preventivi',
                'ordering': ['-data_creazione'],
            },
        ),
        migrations.CreateModel(
            name='RispostaPreventivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prezzo_offerto', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prezzo Offerto (€)')),
                ('giorni_completamento', models.IntegerField(verbose_name='Giorni per Completamento')),
                ('data_inizio_proposta', models.DateField(verbose_name='Data Inizio Proposta')),
                ('descrizione_offerta', models.TextField(verbose_name='Descrizione Offerta')),
                ('materiali_inclusi', models.BooleanField(default=False, verbose_name='Materiali Inclusi')),
                ('garanzia_mesi', models.IntegerField(default=12, verbose_name='Garanzia (mesi)')),
                ('stato', models.CharField(choices=[('inviata', 'Inviata'), ('vista', 'Vista dal Cliente'), ('accettata', 'Accettata'), ('rifiutata', 'Rifiutata')], default='inviata', max_length=20, verbose_name='Stato')),
                ('data_invio', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Invio')),
                ('data_vista', models.DateTimeField(blank=True, null=True, verbose_name='Data Vista')),
                ('artigiano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artigiani.profiloartigiano', verbose_name='Artigiano')),
                ('richiesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artigiani.richiestapreventivo', verbose_name='Richiesta')),
            ],
            options={
                'verbose_name': 'Risposta Preventivo',
                'verbose_name_plural': 'Risposte Preventivi',
                'ordering': ['prezzo_offerto', '-data_invio'],
                'unique_together': {('richiesta', 'artigiano')},
            },
        ),
        migrations.AddField(
            model_name='richiestapreventivo',
            name='artigiani_contattati',
            field=models.ManyToManyField(through='artigiani.RispostaPreventivo', to='artigiani.profiloartigiano', verbose_name='Artigiani Contattati'),
        ),
        migrations.CreateModel(
            name='RecensioneArtigiano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente_nome', models.CharField(max_length=100, verbose_name='Nome Cliente')),
                ('cliente_email', models.EmailField(max_length=254, verbose_name='Email Cliente')),
                ('cliente_telefono', models.CharField(blank=True, max_length=20, verbose_name='Telefono Cliente')),
                ('voto', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Voto (1-5)')),
                ('titolo', models.CharField(max_length=200, verbose_name='Titolo Recensione')),
                ('commento', models.TextField(verbose_name='Commento')),
                ('qualita_lavoro', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Qualità Lavoro')),
                ('puntualita', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Puntualità')),
                ('cortesia', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Cortesia')),
                ('rapporto_qualita_prezzo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rapporto Qualità/Prezzo')),
                ('verificata', models.BooleanField(default=False, verbose_name='Recensione Verificata')),
                ('data_recensione', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Recensione')),
                ('data_verifica', models.DateTimeField(blank=True, null=True, verbose_name='Data Verifica')),
                ('artigiano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recensioni', to='artigiani.profiloartigiano', verbose_name='Artigiano')),
            ],
            options={
                'verbose_name': 'Recensione Artigiano',
                'verbose_name_plural': 'Recensioni Artigiani',
                'ordering': ['-data_recensione'],
                'unique_together': {('artigiano', 'cliente_email')},
            },
        ),
    ]
