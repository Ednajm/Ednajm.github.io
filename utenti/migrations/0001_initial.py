# Generated by Django 5.2.3 on 2025-06-30 13:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('cliente', 'Cliente'), ('impresa', 'Impresa'), ('admin', 'Amministratore')], default='cliente', max_length=10, verbose_name='Tipo Utente')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Telefono')),
                ('data_nascita', models.DateField(blank=True, null=True, verbose_name='Data di Nascita')),
                ('indirizzo', models.TextField(blank=True, null=True, verbose_name='Indirizzo')),
                ('citta', models.CharField(blank=True, max_length=100, null=True, verbose_name='Città')),
                ('cap', models.CharField(blank=True, max_length=5, null=True, verbose_name='CAP')),
                ('provincia', models.CharField(blank=True, max_length=2, null=True, verbose_name='Provincia')),
                ('foto_profilo', models.ImageField(blank=True, null=True, upload_to='profili/', verbose_name='Foto Profilo')),
                ('accetta_marketing', models.BooleanField(default=False, verbose_name='Accetta comunicazioni marketing')),
                ('accetta_privacy', models.BooleanField(default=True, verbose_name='Accetta privacy policy')),
                ('data_registrazione', models.DateTimeField(auto_now_add=True, verbose_name='Data Registrazione')),
                ('ultimo_accesso_dashboard', models.DateTimeField(blank=True, null=True, verbose_name='Ultimo Accesso Dashboard')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utente',
                'verbose_name_plural': 'Utenti',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfiloCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_immobile', models.CharField(blank=True, choices=[('appartamento', 'Appartamento'), ('villa', 'Villa'), ('villetta', 'Villetta a schiera'), ('ufficio', 'Ufficio'), ('negozio', 'Negozio'), ('altro', 'Altro')], max_length=20, null=True, verbose_name='Tipo Immobile')),
                ('proprieta', models.CharField(blank=True, choices=[('proprietario', 'Proprietario'), ('affittuario', 'Affittuario'), ('usufruttuario', 'Usufruttuario'), ('altro', 'Altro')], max_length=20, null=True, verbose_name='Tipo di Proprietà')),
                ('anno_costruzione', models.IntegerField(blank=True, null=True, verbose_name='Anno di Costruzione')),
                ('superficie_mq', models.IntegerField(blank=True, null=True, verbose_name='Superficie (mq)')),
                ('numero_vani', models.IntegerField(blank=True, null=True, verbose_name='Numero Vani')),
                ('piano', models.CharField(blank=True, max_length=10, null=True, verbose_name='Piano')),
                ('ascensore', models.BooleanField(default=False, verbose_name='Presenza Ascensore')),
                ('giardino', models.BooleanField(default=False, verbose_name='Presenza Giardino')),
                ('terrazza', models.BooleanField(default=False, verbose_name='Presenza Terrazza')),
                ('garage', models.BooleanField(default=False, verbose_name='Presenza Garage')),
                ('note_aggiuntive', models.TextField(blank=True, null=True, verbose_name='Note Aggiuntive')),
                ('utente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profilo_cliente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profilo Cliente',
                'verbose_name_plural': 'Profili Clienti',
            },
        ),
        migrations.CreateModel(
            name='ProfiloImpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ragione_sociale', models.CharField(max_length=200, verbose_name='Ragione Sociale')),
                ('partita_iva', models.CharField(max_length=11, unique=True, verbose_name='Partita IVA')),
                ('codice_fiscale', models.CharField(blank=True, max_length=16, null=True, verbose_name='Codice Fiscale')),
                ('tipo_impresa', models.CharField(choices=[('edile', 'Impresa Edile'), ('elettrica', 'Impresa Elettrica'), ('idraulica', 'Impresa Idraulica'), ('termoidraulica', 'Termoidraulica'), ('infissi', 'Infissi e Serramenti'), ('pavimenti', 'Pavimenti e Rivestimenti'), ('pitture', 'Pitture e Decorazioni'), ('isolamento', 'Isolamento Termico'), ('fotovoltaico', 'Fotovoltaico'), ('generale', 'Impresa Generale'), ('altro', 'Altro')], max_length=20, verbose_name='Tipo Impresa')),
                ('descrizione', models.TextField(verbose_name='Descrizione Azienda')),
                ('anno_fondazione', models.IntegerField(blank=True, null=True, verbose_name='Anno Fondazione')),
                ('numero_dipendenti', models.IntegerField(blank=True, null=True, verbose_name='Numero Dipendenti')),
                ('sito_web', models.URLField(blank=True, null=True, verbose_name='Sito Web')),
                ('certificazioni', models.TextField(blank=True, null=True, verbose_name='Certificazioni')),
                ('zone_operative', models.TextField(help_text="Inserire le province o regioni dove opera l'impresa", verbose_name='Zone Operative')),
                ('abilitato', models.BooleanField(default=False, verbose_name='Impresa Verificata')),
                ('data_verifica', models.DateTimeField(blank=True, null=True, verbose_name='Data Verifica')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Rating Medio')),
                ('numero_recensioni', models.IntegerField(default=0, verbose_name='Numero Recensioni')),
                ('utente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profilo_impresa', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profilo Impresa',
                'verbose_name_plural': 'Profili Imprese',
            },
        ),
    ]
